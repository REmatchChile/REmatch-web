@import url("./scrollbar.css");

/* Main */
html {
  font-size: 16px;
  margin: 0;
  font-family: "Roboto", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

a {
  line-height: 0;
}

#root {
  height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
}

$dark: #868686;
$darker: #545454;
$darkest: #212121;

/* MainInterface */
$colors: #03dac6, #fce938, hsl(354, 100%, 72%), hsl(244, 100%, 81%), #20ba56,
  #f5a0ff, #a6ff22, #7f34f0;

.reql-variable {
  color: nth($colors, 1);
}
.reql-operator {
  color: nth($colors, 2);
}
.reql-escape {
  color: nth($colors, 3);
}
.reql-braces {
  color: nth($colors, 4);
}
.reql-numericQuantifier {
  color: nth($colors, 6);
}
.reql-anchor {
  color: nth($colors, 7);
}

@for $i from 0 to length($colors) {
  .m#{$i} {
    background-color: nth($colors, $i + 1);
    color: black !important;
    border-top: 4px solid nth($colors, $i + 1);
    border-bottom: 4px solid nth($colors, $i + 1);

    @for $j from $i + 1 to length($colors) {
      &.m#{$j} {
        border-top: 4px solid nth($colors, $i + 1);
        border-bottom: 4px solid nth($colors, $i + 1);

        @for $k from $j + 1 to length($colors) {
          &.m#{$k} {
            border-top: 4px solid nth($colors, $i + 1);
            border-bottom: 4px solid nth($colors, $j + 1);
          }
        }
      }
    }
  }
}

a {
  text-decoration: none;
}

.cm-cursor {
  color: red;
}

.mainPaper {
  .headContainer {
    padding: 0 1rem;

    .matchesRow {
      display: flex;
      align-items: center;

      .matchesIdx {
        color: $darker;
        width: 3rem;
      }

      .matchesItem {
        padding: 0.5rem;
        flex: 1;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      }
    }
  }

  .matchesContainer {
    padding: 0 1rem;
    height: 250px;
    overflow-y: auto;

    .matchesRow {
      display: flex;
      align-items: center;
      cursor: pointer;

      &:hover {
        background-color: rgba(255, 255, 255, 0.2);

        .matchesIdx {
          color: $darkest;
        }
      }

      .matchesIdx {
        color: $darker;
        width: 3rem;
      }

      .matchesItem {
        padding: 0 0.5rem;
        flex: 1;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      }
    }
  }
}

.MuiDataGrid-root {
  border: none !important;
  font-family: "Roboto Mono", monospace !important;
  .MuiDataGrid-cell {
    &:focus-within {
      outline: none !important;
    }
  }

  :not(.MuiDataGrid-index-column) > .MuiDataGrid-cellContent {
    border-left: 1px dotted $dark;
    border-right: 1px dotted $dark;
    padding: 0 4px;
    white-space: nowrap;
  }

  .MuiDataGrid-columnHeaders {
    border: none !important;
  }

  .MuiDataGrid-footerContainer {
    border: none !important;
  }

  .MuiDataGrid-row:hover {
    cursor: pointer;
  }

  .MuiDataGrid-index-column {
    color: $dark !important;
  }
}
